import java.util.concurrent.TimeUnit


buildscript {
    repositories {
        gradlePluginPortal()
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url "http://nexus.ia.local:8081/repository/ia-maven-group/"
        }
    }

    dependencies {
        classpath("com.inductiveautomation.gradle:ignition-module-plugin:1.2.8")
    }
}

plugins {
    id "base"
}

version "1.0.0-SNAPSHOT"
group "org.fakester"


allprojects {
    apply plugin: "ignition-module-plugin"

    ignitionModule {
        // name of the .modl file to build
        fileName "RadComponents"

        // what is the name of the "root" gradle project for this module.  In this case, it"s "this", aka, the project
        // specified as <repoPath>/rad-perspective-components/build.gradle
        moduleRoot "perspective-alpha-example"

        // module xml configuration
        moduleName "RadComponents"
        moduleId "org.fakester.radcomponent"
        moduleVersion "${project.version}"
        moduleDescription "A module that adds components to the Perspective module."
        requiredIgnitionVersion "8.0.0"
        requiredFrameworkVersion "8"
        isFree true
        license "license.html"
        moduleDependencies = [
            [scope: "G", moduleId: "com.inductiveautomation.perspective"],
            [scope: "D", moduleId: "com.inductiveautomation.perspective"]
        ]
        // map our projects to the scopes their jars should apply
        projectScopes = [
            [name: "gateway", scope: "G"],
            [name: "designer", scope: "D"],
            [name: "common", scope: "GD"]
        ]

        hooks = [
            [scope: "G", hookClass: "org.fakester.gateway.RadGatewayHook"],
            [scope: "D", hookClass: "org.fakester.designer.RadDesignerHook"]
        ]

    }

    if (project.plugins.hasPlugin("java")) {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    // check for new versions of dependencies more frequently than default 24 hours.
    configurations.all {
        resolutionStrategy {
            cacheChangingModulesFor(600, TimeUnit.SECONDS)
        }
    }

    // where should we try to resolve maven artifacts from?
    repositories {
        mavenLocal()
        mavenCentral()
        google()
        jcenter()

        maven {
            name "teamdev"
            url "http://maven.teamdev.com/repository/products"

        }
        maven {
            url "http://nexus.ia.local:8081/repository/ia-maven-group/"
        }
       }
    }


wrapper {
    gradleVersion = "5.2.1"
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}


